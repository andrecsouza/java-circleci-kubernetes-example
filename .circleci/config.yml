version: 2.1
orbs:
  docker: circleci/docker@0.5.8

jobs:
  build:
    docker:
      - image: maven:3-jdk-8
    working_directory: ~/java-circleci-kubernetes-example
    steps:
      - checkout
      - restore_cache:
         keys:
           - m2-{{ checksum "pom.xml" }}
      - run:
          name: Install dependencies
          command: apt-get update && apt-get install -y jq
      - run:
          name: Build and Run tests
          command: mvn install
      - save_cache:
          key: m2-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
      - store_artifacts:
          path: target/java-cicd-0.0.1-SNAPSHOT.jar
          destination: /var/tmp/java-cicd.jar
      - persist_to_workspace:
          root: ~/java-circleci-kubernetes-example
          paths:
            - target/*.jar
            - container/

  create-container:
    docker:
      - image: maven:3-jdk-8
    working_directory: ~/java-circleci-kubernetes-example
    steps:
      - attach_workspace:
          at: ~/java-circleci-kubernetes-example
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
         name: Prepare to make Application part of a Docker image
         command: cp -iv target/*.jar container/application.jar
      - docker/install-docker-tools
      - docker/build:
          path: ~/java-circleci-kubernetes-example/container/
          image: application
      - run:
         name: Run Docker image
         command: docker run -it -d --network=host application
         background: true
      - run:
         name: Invoke health endpoint
         command: |
           sleep 10s
           HEALTH_CODE=$(curl --silent http://localhost:8080/actuator/health | jq '.status' | tr -d '"')
           exit $(test "UP" = "${HEALTH_CODE}")

  deploy:
    docker:
      - image: tomcat:9-jdk11
    working_directory: ~/java-circleci-kubernetes-example
    steps:
      - checkout
      - restore_cache:
         keys:
           - m2-{{ checksum "pom.xml" }}
      - run:
          name: Setup
          command: echo SETUP
      - run:
          name: Deploy
          command: echo SETUP
      - save_cache:
          key: m2-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2

workflows:
  build-and-deploy:
    jobs:
      - build
      - create-container:
          requires:
            - build
      - deploy:
          requires:
            - create-container

