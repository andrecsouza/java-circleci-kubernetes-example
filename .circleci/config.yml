version: 2.1

executors:
  docker-publisher:
    docker:
      - image: circleci/buildpack-deps:stretch

orbs:
  docker: circleci/docker@0.5.8
  gcp-cli: circleci/gcp-cli@1.8.2

jobs:
  build:
    docker:
      - image: maven:3-jdk-8
    working_directory: ~/java-circleci-kubernetes-example
    steps:
      - checkout
      - restore_cache:
         keys:
           - m2-{{ checksum "pom.xml" }}
      - run:
          name: Build and Run tests
          command: mvn install
      - run:
          name: Run Static Analysis
          command: mvn sonar:sonar -Dsonar.projectKey=andrecsouza_java-circleci-kubernetes-example -Dsonar.organization=andrecsouza -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_LOGIN
      - save_cache:
          key: m2-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
      - store_artifacts:
          path: target/java-cicd-0.0.1-SNAPSHOT.jar
          destination: /var/tmp/java-cicd.jar
      - persist_to_workspace:
          root: ~/java-circleci-kubernetes-example
          paths:
            - target/*.jar
            - container/

  create-and-publish-container:
    executor: docker-publisher
    working_directory: ~/java-circleci-kubernetes-example
    steps:
      - attach_workspace:
          at: ~/java-circleci-kubernetes-example
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install dependencies
          command: sudo apt-get update && sudo apt-get install -y jq
      - run:
         name: Prepare to make Application part of a Docker image
         command: cp -iv target/*.jar container/application.jar
      - docker/install-docker-tools
      - docker/build:
          path: ~/java-circleci-kubernetes-example/container/
          image: andrecsouza/java-circleci-kubernetes-example
          tag: ${CIRCLE_SHA1}
      - run:
          name: Publish containerized application
          command: |
              echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
              docker tag andrecsouza/java-circleci-kubernetes-example:${CIRCLE_SHA1} andrecsouza/java-circleci-kubernetes-example:latest
              docker push andrecsouza/java-circleci-kubernetes-example:${CIRCLE_SHA1}
              docker push andrecsouza/java-circleci-kubernetes-example:latest

  deploy:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/java-circleci-kubernetes-example
    steps:
      - run:
          name: Authenticate to Cloud Platform
          command: |
              echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
              gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
              gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run:
          name: Deploy application
          command: |
              gcloud compute instances update-container ${GCLOUD_INSTANCE} --container-image andrecsouza/java-circleci-kubernetes-example:${CIRCLE_SHA1}
              gcloud compute instances start ${GCLOUD_INSTANCE}

workflows:
  build-and-deploy:
    jobs:
      - build
      - create-and-publish-container:
          requires:
            - build
      - deploy-approval:
          type: approval
          requires:
            - create-and-publish-container
      - deploy:
          requires:
            - deploy-approval

